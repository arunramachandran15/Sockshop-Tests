Host: 13.233.13.86
cart
Will run mocha against 13.233.13.86.

> simpleintegration@1.0.0 test /Volumes/Work/smartedemo/sockshop/integration-test
> ./node_modules/mocha/bin/mocha test/bootstrap.test.js test/**/*.test.js

User data :  { username: 'arun',
  password: 'arun123',
  email: 'arunramachandran15@gmail.com' }
undefined


Test setup for url : http://13.233.13.86
User created
  Cart operations
User logged in Response {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      { end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 37,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 37,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-length': '13',
        'content-type': 'text/html; charset=utf-8',
        date: 'Sun, 30 Jun 2019 19:49:36 GMT',
        etag: 'W/"d-OaJpCA6TxxBt1wHxeVRVz2LhB2I"',
        'set-cookie': [Array],
        'x-powered-by': 'Express',
        connection: 'close' },
     rawHeaders:
      [ 'Content-Length',
        '13',
        'Content-Type',
        'text/html; charset=utf-8',
        'Date',
        'Sun, 30 Jun 2019 19:49:36 GMT',
        'Etag',
        'W/"d-OaJpCA6TxxBt1wHxeVRVz2LhB2I"',
        'Set-Cookie',
        '_TRAEFIK_BACKEND=http://front-end:8079',
        'Set-Cookie',
        'logged_in=yEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf; Max-Age=3600; Path=/; Expires=Sun, 30 Jun 2019 20:49:36 GMT',
        'Set-Cookie',
        'md.sid=s%3AyEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf.10GMxvhyrKWpsORe0tgQ1INsgucu0U7%2BuB6NBD%2FW9is; Path=/; HttpOnly',
        'X-Powered-By',
        'Express',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 37,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'GET /login HTTP/1.1\r\nHost: 13.233.13.86\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/login',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text: 'Cookie is set' },
  request:
   Test {
     _events: { response: [Function: bound ], redirect: [Array] },
     _eventsCount: 2,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'http://13.233.13.86/login',
     _header:
      { 'user-agent': 'node-superagent/3.8.3',
        authorization: 'Basic YWRtaW46YWRtaW4=' },
     header:
      { 'User-Agent': 'node-superagent/3.8.3',
        Authorization: 'Basic YWRtaW46YWRtaW4=' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 0,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _buffer: true,
     app: 'http://13.233.13.86',
     _asserts: [],
     _ca: undefined,
     _cert: undefined,
     _key: undefined,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'GET /login HTTP/1.1\r\nHost: 13.233.13.86\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/login',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: '13.233.13.86',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text: 'Cookie is set' },
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      { drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 37,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 37,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'GET /login HTTP/1.1\r\nHost: 13.233.13.86\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nAuthorization: Basic YWRtaW46YWRtaW4=\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/login',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text: 'Cookie is set' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        authorization: [Array] } },
  text: 'Cookie is set',
  body: {},
  files: undefined,
  buffered: true,
  headers:
   { 'content-length': '13',
     'content-type': 'text/html; charset=utf-8',
     date: 'Sun, 30 Jun 2019 19:49:36 GMT',
     etag: 'W/"d-OaJpCA6TxxBt1wHxeVRVz2LhB2I"',
     'set-cookie':
      [ '_TRAEFIK_BACKEND=http://front-end:8079',
        'logged_in=yEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf; Max-Age=3600; Path=/; Expires=Sun, 30 Jun 2019 20:49:36 GMT',
        'md.sid=s%3AyEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf.10GMxvhyrKWpsORe0tgQ1INsgucu0U7%2BuB6NBD%2FW9is; Path=/; HttpOnly' ],
     'x-powered-by': 'Express',
     connection: 'close' },
  header:
   { 'content-length': '13',
     'content-type': 'text/html; charset=utf-8',
     date: 'Sun, 30 Jun 2019 19:49:36 GMT',
     etag: 'W/"d-OaJpCA6TxxBt1wHxeVRVz2LhB2I"',
     'set-cookie':
      [ '_TRAEFIK_BACKEND=http://front-end:8079',
        'logged_in=yEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf; Max-Age=3600; Path=/; Expires=Sun, 30 Jun 2019 20:49:36 GMT',
        'md.sid=s%3AyEhrfT6ip3RGAxdM1DQbt-FJ4rVWvlwf.10GMxvhyrKWpsORe0tgQ1INsgucu0U7%2BuB6NBD%2FW9is; Path=/; HttpOnly' ],
     'x-powered-by': 'Express',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [] }
    Cart api test suite
Post cart data:  null {}
      ✓ Add product (69ms)
Get cart data:  null {}
      ✓ List product (63ms)


  2 passing (307ms)

done
