   19  draft up
   20  draft connect
   21  brig
   22   
   23  ls
   24  cat ~/.ssh/id_rsa.pub 
   25  ssh ubuntu@18.206.140.191
   26  ls
   27  cd ~
   28  ls
   29  ssh ubuntu@18.206.140.191
   30  ls
   31  ssh ubuntu@18.206.140.191
   32  ssh ubuntu@18.212.111.104
   33  ls
   34  kubeadm join 172.31.5.205:6443 --token qfdfwm.60n6e8nuh58c8spx --discovery-token-ca-cert-hash sha256:424c0985766f28c09b1eca6516e987d54da2038914b7150c2c584228ffb31347
   35  ssh ubuntu@18.206.140.191
   36  ls
   37  ls
   38  ssh ubuntu@18.212.111.104
   39  ssh ubuntu@18.212.111.104
   40  ssh ubuntu@18.212.111.104
   41  ssh ubuntu@18.206.140.191
   42  ssh ubuntu@18.206.140.191
   43  ssh ubuntu@18.212.111.104
   44  ssh ubuntu@18.212.111.104
   45  ssh ubuntu@18.206.140.191
   46  ssh ubuntu@18.212.111.104
   47  ssh ubuntu@18.212.111.104
   48  ssh ubuntu@18.212.111.104
   49  ssh ubuntu@18.206.140.191
   50  asdf
   51  asdf plugin-add brig
   52  brig
   53  asdf install brig v0.18.0
   54  asdf global brig v0.18.0
   55  brig version
   56  brig project create
   57  brig project list
   58  brig build list 
   59  `
   60  cd brigade/
   61  ls
   62  cd ..
   63  ls
   64  mkdir sandbox_brigade
   65  cd sandbox_brigade/
   66  mkdir sys
   67  cd sys/
   68  git clone https://github.com/Azure/brigade.git
   69  ls
   70  cd brigade/
   71  ls
   72  cd charts/
   73  ls
   74  cd ..
   75  ls
   76  cd ..
   77  ls
   78  git clone git@github.com:Azure/kashti.git
   79  git clone https://github.com/Azure/kashti.git
   80  cd kashti/
   81  ls
   82  cd ..
   83  ls
   84  helm install --n default kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   85  helm install -n default kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   86  kubectl get svc
   87  helm list
   88  helm upgrade -n default kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   89  helm upgrade kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   90  helm upgrade default kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   91  helm list
   92  kubectl get pods
   93  helm delete kashti --purge
   94  helm delete default --purge
   95  helm list
   96  helm install -n brigade-ui charts/kashti --set brigade.apiServer=http://localhost:7745
   97  helm install -n kashti-ui kashti/charts/kashti/ --set brigade.apiServer=http://localhost:7745
   98  kubectl get pods
   99  kubectl get pods
  100  ssh ubuntu@18.212.111.104
  101  ssh ubuntu@18.212.111.104
  102  ssh ubuntu@18.212.111.104
  103  vim ~/.ssh/config
  104  cd ~/.ssh/
  105  ls
  106  vim ~/.ssh/config
  107  ssh ubuntu@18.212.111.104
  108  ssh ubuntu@18.212.111.104
  109  ssh ubuntu@18.212.111.104
  110  ssh ubuntu@18.212.111.104
  111  ssh ubuntu@18.212.111.104
  112  history | grep ssh
  113  ssh ubuntu@18.206.140.191
  114  ssh ubuntu@18.212.111.104
  115  ssh ubuntu@18.212.111.104
  116  ssh ubuntu@18.212.111.104
  117  vim .ssh/config 
  118  ls
  119  ssh ubuntu@18.212.111.104
  120  ssh ubuntu@18.212.111.104
  121  ssh ubuntu@18.212.111.104
  122  cd sandbox_brigade/
  123  ls
  124  cd sys/
  125  ls
  126  cd brigade/
  127  ls
  128  ls
  129  pwd
  130  cd .
  131  ls
  132  cd ..
  133  ls
  134  cd ..
  135  ls
  136  mkdir projects
  137  cd projects/
  138  ls
  139  git clone https://github.com/arunramachandran15/node-demo.git
  140  cd node-demo/
  141  ls
  142  ls
  143  ls
  144    draft up
  145  raft config set registry docker.io/arun15
  146  draft config set registry docker.io/arun15
  147    draft up
  148  cd ..
  149  ls
  150  cd ..
  151  ls
  152  cd sys/
  153  ls
  154  cd brigade/
  155  ls
  156  git log
  157  git checkout $(git tag -l | tail -n 1)
  158  git log
  159  git branch
  160  ssh ubuntu@18.212.111.104
  161  ssh ubuntu@18.212.111.104
  162  ssh ubuntu@18.212.111.104
  163  ssh ubuntu@18.212.111.104
  164  ssh ubuntu@18.212.111.104
  165  ssh ubuntu@18.212.111.104
  166  ssh ubuntu@18.212.111.104
  167  ssh ubuntu@18.212.111.104
  168  ssh ubuntu@18.212.111.104
  169  ssh ubuntu@18.212.111.104
  170  ssh ubuntu@18.212.111.104
  171  ssh ubuntu@18.212.111.104
  172  minikube start --memory 4096
  173  minikube
  174  minikube start
  175  ssh ubuntu@18.212.111.104
  176  ssh ubuntu@18.212.111.104
  177  ssh ubuntu@18.212.111.104
  178  ssh ubuntu@18.212.111.104
  179  ssh ubuntu@18.212.111.104
  180  ssh ubuntu@18.212.111.104
  181  ssh ubuntu@18.212.111.104
  182  ssh ubuntu@18.212.111.104
  183  ssh ubuntu@18.212.111.104
  184  cd sandbox_brigade/projects/node-demo/
  185  ls
  186  docker build -t arun15/node-demo:latest .
  187  docker push
  188  docker push arun15/node-demo:latest
  189  docker push arun15/node-demo:latest
  190  ls
  191  vim brigade.js 
  192  docker build -t arun15/node-demo:latest .
  193  docker push arun15/node-demo:latest
  194  vim brigade.js 
  195  docker build -t arun15/node-demo:latest .
  196  docker push arun15/node-demo:latest
  197  briggy
  198  vim brigade.js 
  199  ls
  200  ls
  201  cat Dockerfile 
  202  history | grep ss
  203  cat 
  204  minikube start --memory=4096  --show-libmachine-logs=true --stderrthreshold=0 --iso-url=https://storage.googleapis.com/minikube/minikube-0.5.iso
  205  minikube start --memory=4096  --stderrthreshold=0 --iso-url=https://storage.googleapis.com/minikube/minikube-0.5.iso
  206  minikube start
  207  minikube start
  208  minikube start
  209  minikube start --memory=4096  --stderrthreshold=0 --iso-url=https://storage.googleapis.com/minikube/minikube-0.5.iso
  210  minikube start --memory=4096  --stderrthreshold=0 --iso-url=https://storage.googleapis.com/minikube/minikube-0.5.iso
  211  kubectl get pods
  212  kubectl get services
  213  apiVersion: extensions/v1beta1
  214  kind: DaemonSet
  215  metadata:
  216    labels:
  217      k8s-app: fluentd-logging
  218      kubernetes.io/cluster-service: "true"
  219    name: fluentd-elasticsearch
  220    namespace: kube-system
  221  spec:
  222    selector:
  223      matchLabels:
  224        k8s-app: fluentd-logging
  225        kubernetes.io/cluster-service: "true"
  226    template:
  227      metadata:
  228        annotations:
  229          scheduler.alpha.kubernetes.io/critical-pod: ""
  230        creationTimestamp: null
  231        labels:
  232          k8s-app: fluentd-logging
  233          kubernetes.io/cluster-service: "true"
  234        name: fluentd-elasticsearch
  235        namespace: kube-system
  236      spec:
  237        containers:
  238        - env:
  239          - name: AWS_REGION
  240            value: us-east-1
  241          - name: AWS_ELASTICSEARCH_URL
  242            value: https://search-myelasticclusterdomain-7hckxl22cvvantktbyvtudfh74.us-east-1.es.amazonaws.com
  243          - name: AWS_ACCESS_KEY_ID
  244            value: AKIAI6YDEM7KVAXRN4BA
  245          - name: AWS_SECRET_ACCESS_KEY
  246            value: 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
  247          image: cheungpat/fluentd-elasticsearch-aws:1.22
  248          image:ul         IfNotPresen        imagee: fluentd-elast        image:ul         IfNotPresen    mi        image:ul         I0Mi
  249          image:ul                       0m
  250              memory            memory           
  251                                             e:                       Pat                 r/                                       containers
  252                                  est           Alw              rations:
  253        - ke      - ke      - ke      - ke      - ke   ffe      - ke      - ke      - ke          - ke      - ke      -h:      - g
  254          name: varl        n- ho        name: varl       va        name: varl              name: varlibdockercontainers
  255  vim flk.yaml
  256  kubectl apply -f flk.yaml 
  257  kubectl get pods
  258  kubectl get pods -n kube-system
  259  kubectl get pods -n kube-system
  260  kubectl get pods -n kube-system
  261  kubectl get pods -n kube-system
  262  kubectl get pods -n kube-system
  263  kubectl get pods -n kube-system
  264  kubectl logs fluentd-elasticsearch-bdgm4
  265  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  266  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  267  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  268  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  269  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  270  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  271  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  272  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  273  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  274  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  275  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  276  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  277  kubectl logs fluentd-elasticsearch-bdgm4 -n kube-system
  278  ls
  279  kubectl
  280  s
  281  kubectl get configmaps
  282  kubectl get configmaps --all-namespaces
  283  kubectl get  --all-namespaces deployments
  284  kubectl get  --all-namespaces pods
  285  kubectl delete -n kube-system fluentd-elasticsearch-bdgm4
  286  kubectl delete -n fluentd-elasticsearch-bdgm4 -n kube-system
  287  kubectl delete  fluentd-elasticsearch-bdgm4 -n kube-system
  288  kubectl delete pod  fluentd-elasticsearch-bdgm4 -n kube-system
  289  kubectl delete pod  fluentd-elasticsearch-bdgm4 -n kube-system
  290  kubectl delete pod  fluentd-elasticsearch-bdgm4 -n kube-system
  291  kubectl get  --all-namespaces pods
  292  kubectl get  --all-namespaces pods
  293  kubectl get configmaps --all-namespaces
  294  kubectl get deployments -n kube-system
  295  kubectl get secrets -n kube-system
  296  kubectl get all -n kube-system
  297  kubectl delete daemonset fluentd-elasticsearch -n kube-system
  298  kubectl get all -n kube-system
  299  ssh ubuntu@18.212.111.104
  300  ssh ubuntu@18.212.111.104
  301  ssh ubuntu@18.212.111.104
  302  ssh ubuntu@18.212.111.104
  303  ssh ubuntu@18.212.111.104
  304  ssh ubuntu@18.212.111.104
  305  ssh ubuntu@18.212.111.104
  306  ssh ubuntu@18.212.111.104
  307  ssh ubuntu@18.212.111.104
  308  ssh ubuntu@18.212.111.104
  309  ssh ubuntu@18.212.111.104
  310  ssh ubuntu@18.212.111.104
  311  ssh ubuntu@18.212.111.104
  312  ssh ubuntu@18.212.111.104
  313  ssh ubuntu@18.212.111.104
  314  ssh ubuntu@18.212.111.104
  315  ssh ubuntu@18.212.111.104
  316  ssh ubuntu@18.212.111.104
  317  ssh ubuntu@18.212.111.104
  318  ssh ubuntu@18.212.111.104
  319  ssh ubuntu@18.212.111.104
  320  ssh ubuntu@18.212.111.104
  321  ssh ubuntu@18.212.111.104
  322  ssh ubuntu@18.212.111.104
  323  ssh ubuntu@18.212.111.104
  324  ssh ubuntu@18.212.111.104
  325  ssh ubuntu@18.212.111.104
  326  cd .ssh/
  327  ls
  328  vim config 
  329  vim config 
  330  ssh ubuntu@18.212.111.104
  331  ssh ubuntu@18.212.111.104
  332  ssh ubuntu@34.211.63.127
  333  logout
  334  ls
  335  ssh ubuntu@34.211.63.127
  336  cd sandbox_brigade/projects/node-demo/
  337  ls
  338  ls
  339  ls
  340  vim brigade.js 
  341  vim brigade.js 
  342  history | grep node-demo
  343  docker build -t arun15/node-demo:latest .
  344  docker push
  345  docker push arun15/node-demo:latest
  346  vim brigade.js 
  347  docker build -t arun15/node-demo:latest .
  348  docker push arun15/node-demo:latest
  349  vim brigade.js 
  350  docker build -t arun15/node-demo:latest .
  351  docker push arun15/node-demo:latest
  352  docker push arun15/node-demo:latest
  353  docker build -t arun15/node-demo:latest .
  354  vim brigade.js 
  355  docker build -t arun15/node-demo:latest .
  356  docker push arun15/node-demo:latest
  357  ls
  358  vim brigade.js 
  359  docker build -t arun15/node-demo:latest
  360  docker build -t arun15/node-demo:latest .
  361  docker push arun15/node-demo:latest 
  362  vim brigade.js 
  363  git status
  364  git add .
  365  git status
  366  git remote -v
  367  git commit -m "tests"
  368  git push origin master
  369  docker build -t arun15/node-demo:latest .
  370  docker push arun15/node-demo:latest 
  371  vim brigade.js 
  372  docker build -t arun15/node-demo:latest .
  373  docker push arun15/node-demo:latest 
  374  git status
  375  git reset --hard 
  376  git status
  377  git log
  378  git reset --hard 23fce3eb1c497f4e2b09cb59b06b
  379  git status
  380  git push origin master
  381  git revert 23fce3eb1c497f4e2b09cb59b06b
  382  git log
  383  git push origin master
  384   git push -f origin master
  385  docker imagesa
  386  docker images
  387  cd ..
  388  ls
  389  cd node-demo/cd ../~
  390  cd ~
  391  cd /Volumes/Work/opensourceprojects/
  392  ls
  393  cd ml/
  394  ls
  395  cd lazy/
  396  git remote -v
  397  ls
  398  cd gentle/
  399  ls
  400  git remote -v
  401  pwd
  402  cls
  403  clear
  404  git remote -v
  405  docker images
  406  docker images | grep gentle
  407  docker images | grep gentle
  408  clear
  409  docker images | grep gentle
  410  pwd
  411  ssh ubuntu@18.212.111.104
  412  logout
  413  hgrep
  414  ssh ubuntu@34.211.63.127
  415  defaults write NSGlobalDomain KeyRepeat -int 0
  416  ssh ubuntu@34.211.63.127
  417  ssh ubuntu@34.211.63.127
  418  ssh ubuntu@34.211.63.127
  419  docker run -p 8080:8080 arun15/node-demo
  420  docker run -p 8080:8080 arun15/node-demo:sample1
  421  cd /Volumes/Work/opensourceprojects/ml/lazy/gentle
  422  cd ..
  423  cd ..
  424  ls
  425  cd gentle/
  426  ls
  427  git remote -v
  428  clear
  429  git remote -v
  430  history | grep gentle
  431  history | grep build
  432  ls
  433  vim serve.py 
  434  vim serve.py 
  435  docker build -t gentle:cibe .
  436  docker images | gentle
  437  docker images | grep gentle
  438  docker run gentle:cibe
  439  ls
  440  ls
  441  cd /Volumes/Work/opensourceprojects/ml/lazy/gentle
  442  ls
  443  git remote -v
  444  cd ..
  445  ls
  446  cd gentle/
  447  ls
  448  cd ..
  449  cd ..
  450  ls
  451  cd gentle/
  452  ls
  453  git remote -v
  454  ls
  455  docker build -t gentle:demo ./
  456  docker push gentle:cibe
  457  docker push gentle:cibe
  458  docker login
  459  docker push gentle:cibe
  460  docker push arun15/gentle:cibe
  461  docker build -t arun15/gentle:demo ./
  462  docker images | grep gentle
  463  docker push arun15/gentle:cibe
  464  docker push arun15/gentle:demo
  465  ls
  466  ls
  467  docker run arun15/kube-node-demo:v1
  468  ssh ubuntu@18.212.111.104
  469  ssh ubuntu@18.212.111.104
  470  ssh ubuntu@18.212.111.104
  471  ls
  472  cd ~
  473  ls
  474  cd sandbox_brigade/
  475  ls
  476  cd projects/
  477  ls
  478  vim node-demo/
  479  vim node-demo/
  480  docker build -t arun15/node-demo:sample1
  481  docker build -t arun15/node-demo:sample1 .
  482  ls
  483  cd node-demo/
  484  docker build -t arun15/node-demo:sample1 
  485  docker build -t arun15/node-demo:sample1 .
  486  docker push arun15/node-demo:sample1
  487  dockerhun login
  488  dockerhub login
  489  docker login
  490  docker push arun15/node-demo:sample1
  491  docker run 
  492  docker run -b .
  493  docker run --build .
  494  docker run -b .
  495  docker run arun15/node-demo
  496  docker run arun15/sample1
  497  docker run arun15/node-demo:sample1
  498  bash -c "clear && /bin/bash"
  499  cd /Volumes/Work/smartedemo/
  500  ls
  501  cd sockshop/
  502  ls
  503  cd simpleintegration/
  504  ls
  505  docker build -t integration_test_v1:v3 .
  506  docker run integration_test_v1:v3
  507  docker-compose -f docker-compose.yaml up -d
  508  docker-compose -f docker-compose.yaml up -d
  509  ls
  510  docker ps
  511  docker run -d -p 8089:8080 -p 50001:50000 --name MyJenkins --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS -Djenkins.install.runSetupWizard=false
  512  docker run -d -p 8089:8080 -p 50001:50000 --name MyJenkins --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS '-Djenkins.install.runSetupWizard=false'
  513  docker run -d -p 8089:8080 -p 50001:50000 --name MyJenkins --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS \/-Djenkins.install.runSetupWizard=false
  514  docker run myjenkins:v1 -p 8089:8080 -p 50001:50000 --name MyJenkins --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS \/-Djenkins.install.runSetupWizard=false
  515  docker run -d -p 8089:8080 -p 50001:50000 --name MyJenkins --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS \/-Djenkins.install.runSetupWizard=false myjenkins:v1
  516  docker run -d -p 8089:8080 -p 50001:50000 --name myjenkinscontainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/jenkins-store:/var/jenkins_home -e JAVA_OPTS \/-Djenkins.install.runSetupWizard=false myjenkins:v1
  517  history | history2.txt
  518  history > history2.txt
